{"ast":null,"code":"\"use client\"; // src/react/index.tsx\n\nimport { useEffect, useRef } from \"react\"; // package.json\n\nvar name = \"@vercel/speed-insights\";\nvar version = \"1.2.0\"; // src/queue.ts\n\nvar initQueue = () => {\n  if (window.si) return;\n\n  window.si = function a() {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    (window.siq = window.siq || []).push(params);\n  };\n}; // src/utils.ts\n\n\nfunction isBrowser() {\n  return typeof window !== \"undefined\";\n}\n\nfunction detectEnvironment() {\n  try {\n    const env = process.env.NODE_ENV;\n\n    if (env === \"development\" || env === \"test\") {\n      return \"development\";\n    }\n  } catch (e) {}\n\n  return \"production\";\n}\n\nfunction isDevelopment() {\n  return detectEnvironment() === \"development\";\n}\n\nfunction computeRoute(pathname, pathParams) {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n\n  try {\n    const entries = Object.entries(pathParams);\n\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join(\"/\"));\n\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value) {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n\nfunction getScriptSrc(props) {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n\n  if (isDevelopment()) {\n    return \"https://va.vercel-scripts.com/v1/speed-insights/script.debug.js\";\n  }\n\n  if (props.dsn) {\n    return \"https://va.vercel-scripts.com/v1/speed-insights/script.js\";\n  }\n\n  if (props.basePath) {\n    return `${props.basePath}/speed-insights/script.js`;\n  }\n\n  return \"/_vercel/speed-insights/script.js\";\n} // src/generic.ts\n\n\nfunction injectSpeedInsights() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a;\n\n  if (!isBrowser() || props.route === null) return null;\n  initQueue();\n  const src = getScriptSrc(props);\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return null;\n\n  if (props.beforeSend) {\n    (_a = window.si) == null ? void 0 : _a.call(window, \"beforeSend\", props.beforeSend);\n  }\n\n  const script = document.createElement(\"script\");\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn = name + (props.framework ? `/${props.framework}` : \"\");\n  script.dataset.sdkv = version;\n\n  if (props.sampleRate) {\n    script.dataset.sampleRate = props.sampleRate.toString();\n  }\n\n  if (props.route) {\n    script.dataset.route = props.route;\n  }\n\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/speed-insights/vitals`;\n  }\n\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = \"false\";\n  }\n\n  script.onerror = () => {\n    console.log(`[Vercel Speed Insights] Failed to load script from ${src}. Please check if any content blockers are enabled and try again.`);\n  };\n\n  document.head.appendChild(script);\n  return {\n    setRoute: route => {\n      script.dataset.route = route ?? void 0;\n    }\n  };\n} // src/react/utils.ts\n\n\nfunction getBasePath() {\n  if (typeof process === \"undefined\" || typeof process.env === \"undefined\") {\n    return void 0;\n  }\n\n  return process.env.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH;\n} // src/react/index.tsx\n\n\nfunction SpeedInsights(props) {\n  useEffect(() => {\n    var _a;\n\n    if (props.beforeSend) {\n      (_a = window.si) == null ? void 0 : _a.call(window, \"beforeSend\", props.beforeSend);\n    }\n  }, [props.beforeSend]);\n  const setScriptRoute = useRef(null);\n  useEffect(() => {\n    if (!setScriptRoute.current) {\n      const script = injectSpeedInsights({\n        framework: props.framework ?? \"react\",\n        basePath: props.basePath ?? getBasePath(),\n        ...props\n      });\n\n      if (script) {\n        setScriptRoute.current = script.setRoute;\n      }\n    } else if (props.route) {\n      setScriptRoute.current(props.route);\n    }\n  }, [props.route]);\n  return null;\n}\n\nexport { SpeedInsights, computeRoute };","map":{"version":3,"mappings":"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","names":["useEffect","useRef","initQueue","window","si","a","params","siq","push","isBrowser","detectEnvironment","env","process","NODE_ENV","e","isDevelopment","computeRoute","pathname","pathParams","result","entries","Object","key","value","Array","isArray","matcher","turnValueToRegExp","test","replace","join","RegExp","escapeRegExp","string","getScriptSrc","props","scriptSrc","dsn","basePath","injectSpeedInsights","route","src","document","head","querySelector","beforeSend","script","createElement","defer","dataset","sdkn","name","framework","sdkv","version","sampleRate","toString","endpoint","debug","onerror","console","log","appendChild","setRoute","getBasePath","REACT_APP_VERCEL_OBSERVABILITY_BASEPATH","SpeedInsights","setScriptRoute","current"],"sources":["/home/singsys/personal-portfolio/client/node_modules/@vercel/speed-insights/src/react/index.tsx","/home/singsys/personal-portfolio/client/node_modules/@vercel/speed-insights/package.json","/home/singsys/personal-portfolio/client/node_modules/@vercel/speed-insights/src/queue.ts","/home/singsys/personal-portfolio/client/node_modules/@vercel/speed-insights/src/utils.ts","/home/singsys/personal-portfolio/client/node_modules/@vercel/speed-insights/src/generic.ts","/home/singsys/personal-portfolio/client/node_modules/@vercel/speed-insights/src/react/utils.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef } from 'react';\nimport type { SpeedInsightsProps } from '../types';\nimport { computeRoute, injectSpeedInsights } from '../generic';\nimport { getBasePath } from './utils';\n\nexport function SpeedInsights(\n  props: SpeedInsightsProps & {\n    framework?: string;\n    basePath?: string;\n  },\n): JSX.Element | null {\n  useEffect(() => {\n    if (props.beforeSend) {\n      window.si?.('beforeSend', props.beforeSend);\n    }\n  }, [props.beforeSend]);\n\n  const setScriptRoute = useRef<((path: string) => void) | null>(null);\n  useEffect(() => {\n    if (!setScriptRoute.current) {\n      const script = injectSpeedInsights({\n        framework: props.framework ?? 'react',\n        basePath: props.basePath ?? getBasePath(),\n        ...props,\n      });\n      if (script) {\n        setScriptRoute.current = script.setRoute;\n      }\n    } else if (props.route) {\n      setScriptRoute.current(props.route);\n    }\n  }, [props.route]);\n\n  return null;\n}\n\nexport { computeRoute };\n","{\n  \"name\": \"@vercel/speed-insights\",\n  \"version\": \"1.2.0\",\n  \"description\": \"Speed Insights is a tool for measuring web performance and providing suggestions for improvement.\",\n  \"keywords\": [\n    \"speed-insights\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/speed-insights\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./astro\": {\n      \"import\": \"./dist/astro/component.ts\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./nuxt\": {\n      \"browser\": \"./dist/nuxt/index.mjs\",\n      \"import\": \"./dist/nuxt/index.mjs\",\n      \"require\": \"./dist/nuxt/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./remix\": {\n      \"browser\": \"./dist/remix/index.mjs\",\n      \"import\": \"./dist/remix/index.mjs\",\n      \"require\": \"./dist/remix/index.js\"\n    },\n    \"./sveltekit\": {\n      \"svelte\": \"./dist/sveltekit/index.mjs\",\n      \"types\": \"./dist/sveltekit/index.d.ts\"\n    },\n    \"./vue\": {\n      \"browser\": \"./dist/vue/index.mjs\",\n      \"import\": \"./dist/vue/index.mjs\",\n      \"require\": \"./dist/vue/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ],\n      \"nuxt\": [\n        \"dist/nuxt/index.d.ts\"\n      ],\n      \"remix\": [\n        \"dist/remix/index.d.ts\"\n      ],\n      \"sveltekit\": [\n        \"dist/sveltekit/index.d.ts\"\n      ],\n      \"vue\": [\n        \"dist/vue/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup && pnpm copy-astro\",\n    \"copy-astro\": \"cp -R src/astro dist/\",\n    \"dev\": \"pnpm copy-astro && tsup --watch\",\n    \"postinstall\": \"node scripts/postinstall.mjs\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"devDependencies\": {\n    \"@remix-run/react\": \"^2.14.0\",\n    \"@sveltejs/kit\": \"^2.8.1\",\n    \"@swc/core\": \"^1.9.2\",\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^16.0.1\",\n    \"@types/node\": \"^22.9.1\",\n    \"@types/react\": \"^18.3.12\",\n    \"copyfiles\": \"^2.4.1\",\n    \"jsdom\": \"^25.0.1\",\n    \"next\": \"^14.0.4\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"svelte\": \"^5.2.7\",\n    \"tsup\": \"8.3.5\",\n    \"vitest\": \"^2.1.5\",\n    \"vue\": \"^3.5.13\",\n    \"vue-router\": \"^4.4.5\"\n  },\n  \"peerDependencies\": {\n    \"@sveltejs/kit\": \"^1 || ^2\",\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19 || ^19.0.0-rc\",\n    \"svelte\": \">= 4\",\n    \"vue\": \"^3\",\n    \"vue-router\": \"^4\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@sveltejs/kit\": {\n      \"optional\": true\n    },\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    },\n    \"svelte\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"vue-router\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.si) return;\n\n  window.si = function a(...params): void {\n    (window.siq = window.siq || []).push(params);\n  };\n};\n","import type { SpeedInsightsProps } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function isProduction(): boolean {\n  return detectEnvironment() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return detectEnvironment() === 'development';\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null,\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getScriptSrc(\n  props: SpeedInsightsProps & { basePath?: string },\n): string {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return 'https://va.vercel-scripts.com/v1/speed-insights/script.debug.js';\n  }\n  if (props.dsn) {\n    return 'https://va.vercel-scripts.com/v1/speed-insights/script.js';\n  }\n  if (props.basePath) {\n    return `${props.basePath}/speed-insights/script.js`;\n  }\n  return '/_vercel/speed-insights/script.js';\n}\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type { SpeedInsightsProps } from './types';\nimport { computeRoute, getScriptSrc, isBrowser, isDevelopment } from './utils';\n\n/**\n * Injects the Vercel Speed Insights script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/speed-insights).\n * @param [props] - Speed Insights options.\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.sampleRate] - When setting to 0.5, 50% of the events will be sent to Vercel Speed Insights. Defaults to `1`.\n * @param [props.route] - The dynamic route of the page.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n */\nfunction injectSpeedInsights(\n  props: SpeedInsightsProps & {\n    framework?: string;\n    basePath?: string;\n  } = {},\n): {\n  setRoute: (route: string | null) => void;\n} | null {\n  // When route is null, it means that pages router is not ready yet. Will resolve soon\n  if (!isBrowser() || props.route === null) return null;\n\n  initQueue();\n\n  const src = getScriptSrc(props);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return null;\n\n  if (props.beforeSend) {\n    window.si?.('beforeSend', props.beforeSend);\n  }\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.sampleRate) {\n    script.dataset.sampleRate = props.sampleRate.toString();\n  }\n  if (props.route) {\n    script.dataset.route = props.route;\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/speed-insights/vitals`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  script.onerror = (): void => {\n    // eslint-disable-next-line no-console -- Logging is okay here\n    console.log(\n      `[Vercel Speed Insights] Failed to load script from ${src}. Please check if any content blockers are enabled and try again.`,\n    );\n  };\n\n  document.head.appendChild(script);\n\n  return {\n    setRoute: (route: string | null): void => {\n      script.dataset.route = route ?? undefined;\n    },\n  };\n}\n\nexport { injectSpeedInsights, computeRoute };\nexport type { SpeedInsightsProps };\n\n// eslint-disable-next-line import/no-default-export -- Allow default export\nexport default {\n  injectSpeedInsights,\n  computeRoute,\n};\n","export function getBasePath(): string | undefined {\n  // !! important !!\n  // do not access env variables using process.env[varname]\n  // some bundles won't replace the value at build time.\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- we can't use optionnal here, it'll break if process does not exist.\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return undefined;\n  }\n  return process.env.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH;\n}\n"]},"metadata":{},"sourceType":"module"}